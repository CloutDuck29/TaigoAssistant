from aiogram import types, Router
from aiogram.types import ReplyKeyboardRemove
from aiogram.fsm.context import FSMContext
from bot.keyboards import minecraft_menu, yes_no_menu, main_menu, how_do_you_know_us, deadline
from bot.states import OrderState
from bot.loader import bot
from bot.config import GROUP_ID

router = Router()

@router.message(OrderState.waiting_for_nameSite)
async def process_name_site(message: types.Message, state: FSMContext):
    await state.update_data(name=message.text)
    await message.answer("–£–∫–∞–∂–∏—Ç–µ —Å–≤–æ–π –¥–æ–º–µ–Ω (–ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏)")
    await state.set_state(OrderState.waiting_for_siteDomain)

@router.message(OrderState.waiting_for_siteDomain)
async def process_domain(message: types.Message, state: FSMContext):
    await state.update_data(domain=message.text)
    await message.answer("–£–∫–∞–∂–∏—Ç–µ –∫–∞–∫–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –Ω–∞ —Å–∞–π—Ç–µ –∏ –∏—Ö –æ–ø–∏—Å–∞–Ω–∏–µ")
    await state.set_state(OrderState.waiting_for_layoutSite)

@router.message(OrderState.waiting_for_layoutSite)
async def process_layout(message: types.Message, state: FSMContext):
    await state.update_data(layout=message.text)
    await message.answer("–£–∫–∞–∂–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª —Å–∞–π—Ç–∞ –∏ –∫–∞–∫–∏–µ –∑–∞–¥–∞—á–∏ –æ–Ω –¥–æ–ª–∂–µ–Ω —Ä–µ—à–∞—Ç—å")
    await state.set_state(OrderState.waiting_for_funcSite)

@router.message(OrderState.waiting_for_funcSite)
async def process_func(message: types.Message, state: FSMContext):
    await state.update_data(func=message.text)
    await message.answer("–£–∫–∞–∂–∏—Ç–µ, –µ—Å—Ç—å –ª–∏ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å —Å–∞–π—Ç")
    await state.set_state(OrderState.waiting_for_addonsSite)

@router.message(OrderState.waiting_for_addonsSite)
async def process_addons(message: types.Message, state: FSMContext):
    await state.update_data(addons=message.text)
    await message.answer("–ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –ø—Ä–∏–º–µ—Ä—ã —Å–∞–π—Ç–æ–≤ –Ω–∞–ø–æ–¥–æ–±–∏–µ, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –º—ã –º–æ–≥–ª–∏ –±—ã –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è (–ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏)")
    await state.set_state(OrderState.waiting_for_examplesSite)


@router.message(OrderState.waiting_for_examplesSite)
async def process_examples(message: types.Message, state: FSMContext):
    await state.update_data(examples=message.text)
    await message.answer("–ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –¥–∏–∑–∞–π–Ω (–ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏)")
    await state.set_state(OrderState.waiting_for_designSite)

@router.message(OrderState.waiting_for_designSite)
async def process_design(message: types.Message, state: FSMContext):
    await state.update_data(design=message.text)
    await message.answer("–ó–¥–µ—Å—å –í—ã –º–æ–∂–µ—Ç–µ –æ–ø–∏—Å–∞—Ç—å —á—Ç–æ-—Ç–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ, —á—Ç–æ –±—ã–ª–æ —É–ø—É—â–µ–Ω–æ –≤ –Ω–∞—à–µ–π —Ñ–æ—Ä–º–µ –Ω–∞ –í–∞—à –≤–∑–≥–ª—è–¥, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –í–∞—à–µ–º—É –ø—Ä–æ–µ–∫—Ç—É")
    await state.set_state(OrderState.waiting_for_extraInfoSite)

@router.message(OrderState.waiting_for_extraInfoSite)
async def process_extra(message: types.Message, state: FSMContext):
    await state.update_data(extra=message.text)
    await message.answer("–ï—Å—Ç—å –ª–∏ —É –í–∞—Å –ø–æ–∂–µ–ª–∞–Ω–∏—è –ø–æ –ø–æ–≤–æ–¥—É —Å—Ä–æ–∫–æ–≤?", reply_markup=deadline)
    await state.set_state(OrderState.waiting_for_deadlineSite)


@router.message(OrderState.waiting_for_deadlineSite)
async def process_dead(message: types.Message, state: FSMContext):
    await state.update_data(dead=message.text)
    await message.answer("–û—Ç–∫—É–¥–∞ –í—ã —É–∑–Ω–∞–ª–∏ –æ –Ω–∞—à–µ–π —Å—Ç—É–¥–∏–∏?", reply_markup=how_do_you_know_us)
    await state.set_state(OrderState.waiting_for_sourceSite)


@router.message(OrderState.waiting_for_sourceSite)
async def process_source_site(message: types.Message, state: FSMContext):
    await state.update_data(source=message.text)

    user_data = await state.get_data()

    # –°—Ñ–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    full_text = (
        f"üì¢ –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –Ω–∞ —Å–∞–π—Ç!\n\n"
        f"‚ô¶Ô∏è –ù–∞–∑–≤–∞–Ω–∏–µ:\n ‚Äî {user_data['name']}\n"
        f"‚ô¶Ô∏è –ñ–µ–ª–∞–µ–º—ã–π –¥–æ–º–µ–Ω:\n ‚Äî {user_data['domain']}\n"
        f"‚ô¶Ô∏è –°—Ç—Ä–∞–Ω–∏—Ü—ã —Å–∞–π—Ç–∞:\n ‚Äî {user_data['layout']}\n"
        f"‚ô¶Ô∏è –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª —Å–∞–π—Ç–∞:\n ‚Äî {user_data['func']}\n"
        f"‚ô¶Ô∏è –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã:\n ‚Äî {user_data['addons']}\n"
        f"‚ô¶Ô∏è –ü—Ä–∏–º–µ—Ä—ã:\n ‚Äî {user_data['examples']}\n"
        f"‚ô¶Ô∏è –î–∏–∑–∞–π–Ω:\n ‚Äî {user_data['design']}\n"
        f"‚ô¶Ô∏è –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:\n ‚Äî {user_data['extra']}\n"
        f"‚ô¶Ô∏è –°—Ä–æ–∫–∏:\n ‚Äî {user_data['dead']}\n"
        f"‚ô¶Ô∏è –û—Ç–∫—É–¥–∞ —É–∑–Ω–∞–ª–∏ –æ –Ω–∞—Å:\n ‚Äî {user_data['source']}\n"
        f"–ó–∞–∫–∞–∑—á–∏–∫: {message.from_user.full_name} (@{message.from_user.username or '–ë–µ–∑ —é–∑–µ—Ä–Ω–µ–π–º–∞'})"
    )

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è
    await safe_send_message(GROUP_ID, full_text)

    await message.answer("‚úÖ –í–∞—à –∑–∞–∫–∞–∑ –Ω–∞ —Å–∞–π—Ç –ø—Ä–∏–Ω—è—Ç!", reply_markup=main_menu)

    await state.clear()


async def safe_send_message(chat_id: int, text: str):
    max_length = 4096
    for i in range(0, len(text), max_length):
        await bot.send_message(chat_id, text[i:i + max_length])