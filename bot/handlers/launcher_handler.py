from aiogram import types, Router
from aiogram.types import ReplyKeyboardRemove
from aiogram.fsm.context import FSMContext
from bot.keyboards import minecraft_menu, yes_no_menu, main_menu, how_do_you_know_us, deadline
from bot.states import OrderState
from bot.loader import bot
from bot.config import GROUP_ID

router = Router()

@router.message(OrderState.waiting_for_nameLauncher)
async def process_name_launcher(message: types.Message, state: FSMContext):
    await state.update_data(name=message.text)
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–µ—Ä—Å–∏—é –ª–∞—É–Ω—á–µ—Ä–∞:")
    await state.set_state(OrderState.waiting_for_versionLauncher)

@router.message(OrderState.waiting_for_versionLauncher)
async def process_version(message: types.Message, state: FSMContext):
    await state.update_data(version=message.text)
    await message.answer("–£–∫–∞–∂–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –ª–∞—É–Ω—á–µ—Ä–∞ –∏ –∫–∞–∫–∏–µ –∑–∞–¥–∞—á–∏ –æ–Ω –¥–æ–ª–∂–µ–Ω —Ä–µ—à–∞—Ç—å:")
    await state.set_state(OrderState.waiting_for_funcLauncher)

@router.message(OrderState.waiting_for_funcLauncher)
async def process_func(message: types.Message, state: FSMContext):
    await state.update_data(func=message.text)
    await message.answer("–£–∫–∞–∂–∏—Ç–µ, –µ—Å—Ç—å –ª–∏ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –ª–∞—É–Ω—á–µ—Ä (–±–∏–±–ª–∏–æ—Ç–µ–∫–∏, –∫–∞–∫–∏–µ-—Ç–æ —Å–º–µ–∂–Ω—ã–µ –ø–ª–∞–≥–∏–Ω—ã):")
    await state.set_state(OrderState.waiting_for_addonsLauncher)

@router.message(OrderState.waiting_for_addonsLauncher)
async def process_addons(message: types.Message, state: FSMContext):
    await state.update_data(addons=message.text)
    await message.answer("–ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –ø—Ä–∏–º–µ—Ä—ã –ª–∞—É–Ω—á–µ—Ä–æ–≤ –Ω–∞–ø–æ–¥–æ–±–∏–µ, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –º—ã –º–æ–≥–ª–∏ –±—ã –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è (–ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏)")
    await state.set_state(OrderState.waiting_for_examplesLauncher)


@router.message(OrderState.waiting_for_examplesLauncher)
async def process_examples(message: types.Message, state: FSMContext):
    await state.update_data(examples=message.text)
    await message.answer("–ó–¥–µ—Å—å –í—ã –º–æ–∂–µ—Ç–µ –æ–ø–∏—Å–∞—Ç—å —á—Ç–æ-—Ç–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ, —á—Ç–æ –±—ã–ª–æ —É–ø—É—â–µ–Ω–æ –≤ –Ω–∞—à–µ–π —Ñ–æ—Ä–º–µ –Ω–∞ –í–∞—à –≤–∑–≥–ª—è–¥, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –í–∞—à–µ–º—É –ø—Ä–æ–µ–∫—Ç—É")
    await state.set_state(OrderState.waiting_for_extraInfoLauncher)


@router.message(OrderState.waiting_for_extraInfoLauncher)
async def process_extra(message: types.Message, state: FSMContext):
    await state.update_data(extra=message.text)
    await message.answer("–ï—Å—Ç—å –ª–∏ —É –í–∞—Å –ø–æ–∂–µ–ª–∞–Ω–∏—è –ø–æ –ø–æ–≤–æ–¥—É —Å—Ä–æ–∫–æ–≤?", reply_markup=deadline)
    await state.set_state(OrderState.waiting_for_deadlineLauncher)


@router.message(OrderState.waiting_for_deadlineLauncher)
async def process_dead(message: types.Message, state: FSMContext):
    await state.update_data(dead=message.text)
    await message.answer("–û—Ç–∫—É–¥–∞ –í—ã —É–∑–Ω–∞–ª–∏ –æ –Ω–∞—à–µ–π —Å—Ç—É–¥–∏–∏?", reply_markup=how_do_you_know_us)
    await state.set_state(OrderState.waiting_for_sourceLauncher)


@router.message(OrderState.waiting_for_sourceLauncher)
async def process_source_launcher(message: types.Message, state: FSMContext):
    await state.update_data(source=message.text)

    user_data = await state.get_data()

    await bot.send_message(
        GROUP_ID,
        f"üì¢ 1–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –Ω–∞ –ø–ª–∞–≥–∏–Ω!\n\n"
        f"üîπ –ù–∞–∑–≤–∞–Ω–∏–µ:\n ‚Äî {user_data['name']}\n"
        f"üîπ –í–µ—Ä—Å–∏—è –∏ —è–¥—Ä–æ:\n ‚Äî {user_data['version']}\n"
        f"üîπ –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –ª–∞—É–Ω—á–µ—Ä–∞:\n ‚Äî {user_data['func']}\n"
        f"üîπ –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã:\n ‚Äî {user_data['addons']}\n"
        f"üîπ –ü—Ä–∏–º–µ—Ä—ã:\n ‚Äî {user_data['examples']}\n"
        f"üîπ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:\n ‚Äî {user_data['extra']}\n"
        f"üîπ –°—Ä–æ–∫–∏:\n ‚Äî {user_data['dead']}\n"
        f"üîπ –û—Ç–∫—É–¥–∞ —É–∑–Ω–∞–ª–∏ –æ –Ω–∞—Å:\n ‚Äî {user_data['source']}\n"
        f"–ó–∞–∫–∞–∑—á–∏–∫: {message.from_user.full_name} (@{message.from_user.username or '–ë–µ–∑ —é–∑–µ—Ä–Ω–µ–π–º–∞'})"
    )
    await message.answer("‚úÖ –í–∞—à –∑–∞–∫–∞–∑ –Ω–∞ –ª–∞—É–Ω—á–µ—Ä –ø—Ä–∏–Ω—è—Ç!", reply_markup=main_menu)

    await state.clear()
