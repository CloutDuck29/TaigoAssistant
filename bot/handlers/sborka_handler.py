from aiogram import types, Router
from aiogram.types import ReplyKeyboardRemove
from aiogram.fsm.context import FSMContext
from bot.keyboards import minecraft_menu, yes_no_menu, main_menu, how_do_you_know_us, deadline
from bot.states import OrderState
from bot.loader import bot
from bot.config import GROUP_ID

router = Router()

@router.message(OrderState.waiting_for_name)
async def process_name(message: types.Message, state: FSMContext):
    await state.update_data(name=message.text)
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–µ—Ä—Å–∏—é –ø—Ä–æ–µ–∫—Ç–∞:")
    await state.set_state(OrderState.waiting_for_version)


@router.message(OrderState.waiting_for_version)
async def process_version(message: types.Message, state: FSMContext):
    await state.update_data(version=message.text)
    await message.answer("–£–∫–∞–∂–∏—Ç–µ —Å–æ—Ü.—Å–µ—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞:")
    await state.set_state(OrderState.waiting_for_socials)


@router.message(OrderState.waiting_for_socials)
async def process_socials(message: types.Message, state: FSMContext):
    await state.update_data(socials=message.text)
    await message.answer("–¶–≤–µ—Ç–æ–≤–∞—è –≥–∞–º–º–∞ –í–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞:")
    await state.set_state(OrderState.waiting_for_colors)


@router.message(OrderState.waiting_for_colors)
async def process_colors(message: types.Message, state: FSMContext):
    await state.update_data(colors=message.text)
    await message.answer("–¢–∏–ø —Ä–µ–∂–∏–º–∞ (–ê–Ω–∞—Ä—Ö–∏—è, –ë–µ–¥–í–∞—Ä—Å –∏ —Ç.–¥):")
    await state.set_state(OrderState.waiting_for_mode)


@router.message(OrderState.waiting_for_mode)
async def process_mode(message: types.Message, state: FSMContext):
    await state.update_data(mode=message.text)
    await message.answer("–û–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –í–∞—à–µ–≥–æ —Ä–µ–∂–∏–º–∞ (–≤ —á–µ–º –µ–≥–æ —Å–º—ã—Å–ª, –∏ –∫–∞–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å):")
    await state.set_state(OrderState.waiting_for_functionality)


@router.message(OrderState.waiting_for_functionality)
async def process_functionality(message: types.Message, state: FSMContext):
    await state.update_data(functionality=message.text)
    await message.answer("–ù—É–∂–µ–Ω –ª–∏ –∫–∞—Å—Ç–æ–º–Ω—ã–π —Å–ø–∞–≤–Ω?", reply_markup=yes_no_menu)
    await state.set_state(OrderState.waiting_for_spawn)


@router.message(OrderState.waiting_for_spawn)
async def process_spawn(message: types.Message, state: FSMContext):
    await state.update_data(spawn=message.text)
    await message.answer("–û–ø–∏—à–∏—Ç–µ, –∫–∞–∫–∏–µ –≥–æ–ª–æ–≥—Ä–∞–º–º—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:", reply_markup=ReplyKeyboardRemove())
    await state.set_state(OrderState.waiting_for_holograms)


@router.message(OrderState.waiting_for_holograms)
async def process_holograms(message: types.Message, state: FSMContext):
    await state.update_data(holograms=message.text)
    await message.answer("–ï—Å—Ç—å –ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å –≤ —Å–∞–º–æ–ø–∏—Å–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏—è—Ö (–ø–ª–∞–≥–∏–Ω–∞—Ö)?", reply_markup=yes_no_menu)
    await state.set_state(OrderState.waiting_for_plugins)


@router.message(OrderState.waiting_for_plugins)
async def process_plugins(message: types.Message, state: FSMContext):
    await state.update_data(plugins=message.text)
    await message.answer("–£–∫–∞–∂–∏—Ç–µ, –Ω—É–∂–Ω–æ –ª–∏ —Å–æ–∑–¥–∞—Ç—å —Å–∞–º–æ–ø–∏—Å–Ω—ã–π –ª–∞—É–Ω—á–µ—Ä –ø–æ–¥ –í–∞—à –ø—Ä–æ–µ–∫—Ç:", reply_markup=yes_no_menu)
    await state.set_state(OrderState.waiting_for_launcher)


@router.message(OrderState.waiting_for_launcher)
async def process_launcher(message: types.Message, state: FSMContext):
    await state.update_data(launcher=message.text)
    await message.answer("–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –∏–∫–æ–Ω–∫—É –¥–ª—è –í–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ (—Å—Å—ã–ª–∫–æ–π):", reply_markup=ReplyKeyboardRemove())
    await state.set_state(OrderState.waiting_for_icon)


@router.message(OrderState.waiting_for_icon)
async def process_icon(message: types.Message, state: FSMContext):
    await state.update_data(icon=message.text)
    await message.answer("–ù—É–∂–µ–Ω –ª–∏ –í–∞–º —Å–∞–π—Ç –∞–≤—Ç–æ-–¥–æ–Ω–∞—Ç–∞ (EasyDonate)?", reply_markup=yes_no_menu)
    await state.set_state(OrderState.waiting_for_donations)


@router.message(OrderState.waiting_for_donations)
async def process_donations(message: types.Message, state: FSMContext):
    await state.update_data(donations=message.text)
    await message.answer("–ó–¥–µ—Å—å –í—ã –º–æ–∂–µ—Ç–µ –æ–ø–∏—Å–∞—Ç—å —á—Ç–æ-—Ç–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ, —á—Ç–æ –±—ã–ª–æ —É–ø—É—â–µ–Ω–æ –≤ –Ω–∞—à–µ–π —Ñ–æ—Ä–º–µ –Ω–∞ –í–∞—à –≤–∑–≥–ª—è–¥:", reply_markup=ReplyKeyboardRemove())
    await state.set_state(OrderState.waiting_for_additional)


@router.message(OrderState.waiting_for_additional)
async def process_additional(message: types.Message, state: FSMContext):
    await state.update_data(additional=message.text)
    await message.answer("–ï—Å—Ç—å –ª–∏ —É –í–∞—Å –ø–æ–∂–µ–ª–∞–Ω–∏—è –ø–æ –ø–æ–≤–æ–¥—É —Å—Ä–æ–∫–æ–≤?", reply_markup=deadline)
    await state.set_state(OrderState.waiting_for_deadline)


@router.message(OrderState.waiting_for_deadline)
async def process_deadline(message: types.Message, state: FSMContext):
    await state.update_data(deadline=message.text)
    await message.answer("–ü–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –ª–∏ –í–∞–º –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º –Ω–∞—à–∞ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞?", reply_markup=yes_no_menu)
    await state.set_state(OrderState.waiting_for_support)


@router.message(OrderState.waiting_for_support)
async def process_support(message: types.Message, state: FSMContext):
    await state.update_data(support=message.text)
    await message.answer("–û—Ç–∫—É–¥–∞ –í—ã —É–∑–Ω–∞–ª–∏ –æ –Ω–∞—à–µ–π —Å—Ç—É–¥–∏–∏?", reply_markup=how_do_you_know_us)
    await state.set_state(OrderState.waiting_for_source)


@router.message(OrderState.waiting_for_source)
async def process_source(message: types.Message, state: FSMContext):
    await state.update_data(source=message.text)

    user_data = await state.get_data()

    await bot.send_message(
        GROUP_ID,
        f"üì¢ –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –Ω–∞ —Å–±–æ—Ä–∫—É!\n\n"
        f"üîπ –ù–∞–∑–≤–∞–Ω–∏–µ:\n ‚Äî {user_data['name']}\n"
        f"üîπ –í–µ—Ä—Å–∏—è:\n ‚Äî {user_data['version']}\n"
        f"üîπ –°–æ—Ü.—Å–µ—Ç–∏:\n ‚Äî {user_data['socials']}\n"
        f"üîπ –¶–≤–µ—Ç–æ–≤–∞—è –≥–∞–º–º–∞:\n ‚Äî {user_data['colors']}\n"
        f"üîπ –¢–∏–ø —Ä–µ–∂–∏–º–∞:\n ‚Äî {user_data['mode']}\n"
        f"üîπ –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª:\n ‚Äî {user_data['functionality']}\n"
        f"üîπ –ö–∞—Å—Ç–æ–º–Ω—ã–π —Å–ø–∞–≤–Ω:\n ‚Äî {user_data['spawn']}\n"
        f"üîπ –ì–æ–ª–æ–≥—Ä–∞–º–º—ã:\n ‚Äî {user_data['holograms']}\n"
        f"üîπ –ü–ª–∞–≥–∏–Ω—ã:\n ‚Äî {user_data['plugins']}\n"
        f"üîπ –õ–∞—É–Ω—á–µ—Ä:\n ‚Äî {user_data['launcher']}\n"
        f"üîπ –ò–∫–æ–Ω–∫–∞:\n ‚Äî {user_data['icon']}\n"
        f"üîπ –°–∞–π—Ç –∞–≤—Ç–æ-–¥–æ–Ω–∞—Ç–∞:\n ‚Äî {user_data['donations']}\n"
        f"üîπ –î–æ–ø. –æ–ø–∏—Å–∞–Ω–∏–µ:\n ‚Äî {user_data['additional']}\n"
        f"üîπ –°—Ä–æ–∫–∏:\n ‚Äî {user_data['deadline']}\n"
        f"üîπ –ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞:\n ‚Äî {user_data['support']}\n\n"
        f"–ó–∞–∫–∞–∑—á–∏–∫: {message.from_user.full_name} (@{message.from_user.username or '–ë–µ–∑ —é–∑–µ—Ä–Ω–µ–π–º–∞'})"
    )
    await message.answer("‚úÖ –í–∞—à –∑–∞–∫–∞–∑ –Ω–∞ —Å–±–æ—Ä–∫—É –ø—Ä–∏–Ω—è—Ç!", reply_markup=main_menu)

    await state.clear()