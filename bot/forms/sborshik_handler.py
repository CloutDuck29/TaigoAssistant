from aiogram import types, Router
from aiogram.types import ReplyKeyboardRemove
from aiogram.fsm.context import FSMContext
from aiogram.filters import Command
from bot.keyboards import main_menu
from bot.states import OrderState
from bot.loader import bot
from bot.config import GROUP_ID

router = Router()

plugin_specialist_questions = {
    'name': {"question": "–í–∞—à–∞ –¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è (–¥–¥.–º–º.–≥–≥–≥–≥)?", "next_state": OrderState.waiting_for_birthdate},
    'birthdate': {"question": "–í–∞—à –æ–ø—ã—Ç –≤ –≥–æ–¥–∞—Ö", "next_state": OrderState.waiting_for_experience},
    'experience': {"question": "1Ô∏è‚É£ –ö–∞–∫–æ–π —É –í–∞—Å –æ–ø—ã—Ç –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞–º–∏ Minecraft?\n–ö–∞–∫–∏–µ —Ç–∏–ø—ã —Å–µ—Ä–≤–µ—Ä–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, Bukkit, Spigot, Paper) –í—ã –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–ª–∏?", "next_state": OrderState.waiting_for_experienceInServers},
    'experienceInServer': {"question": "2Ô∏è‚É£ –ö–∞–∫ –í—ã –ø–æ–¥—Ö–æ–¥–∏—Ç–µ –∫ –≤—ã–±–æ—Ä—É –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –ø–ª–∞–≥–∏–Ω–æ–≤ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–æ–≤ Minecraft?\n–° –∫–∞–∫–∏–º–∏ –ø–ª–∞–≥–∏–Ω–∞–º–∏ –í—ã —Ä–∞–±–æ—Ç–∞–ª–∏, –∏ –∫–∞–∫ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–ª–∏ –∏—Ö —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å?", "next_state": OrderState.waiting_for_choosePlugin},
    'choosePlugins': {"question": "3Ô∏è‚É£ –ö–∞–∫ –í—ã —Ä–µ—à–∞–µ—Ç–µ –ø—Ä–æ–±–ª–µ–º—ã —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ –º–µ–∂–¥—É –ø–ª–∞–≥–∏–Ω–∞–º–∏?\n–ö–∞–∫–∏–µ —à–∞–≥–∏ –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ, —á—Ç–æ–±—ã –ø–ª–∞–≥–∏–Ω—ã –Ω–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤–∞–ª–∏ –¥—Ä—É–≥ —Å –¥—Ä—É–≥–æ–º?", "next_state": OrderState.waiting_for_problemsInPlugins},
    'problemsInPlugins': {"question": "4Ô∏è‚É£ –ö–∞–∫–∏–µ –º–µ—Ä—ã –í—ã –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–µ—Ä–∞ –∏ –ø–ª–∞–≥–∏–Ω–æ–≤?\n–ö–∞–∫ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç–µ, —á—Ç–æ–±—ã —Å–µ—Ä–≤–µ—Ä –Ω–µ –∏—Å–ø—ã—Ç—ã–≤–∞–ª –ª–∞–≥–æ–≤ –∏ —Ä–∞–±–æ—Ç–∞–ª —Å—Ç–∞–±–∏–ª—å–Ω–æ –ø—Ä–∏ –±–æ–ª—å—à–æ–π –Ω–∞–≥—Ä—É–∑–∫–µ?", "next_state": OrderState.waiting_for_optimizationPluginsOnServer},
    'optimizationPlugin': {"question": "5Ô∏è‚É£ –ö–∞–∫ –í—ã —Ä–µ—à–∞–µ—Ç–µ –∑–∞–¥–∞—á–∏ –ø–æ –º–∏–≥—Ä–∞—Ü–∏–∏ —Å–µ—Ä–≤–µ—Ä–æ–≤ –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—é –ø–ª–∞–≥–∏–Ω–æ–≤?\n–ö–∞–∫–∏–µ —à–∞–≥–∏ –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ –¥–ª—è –º–∏–Ω–∏–º–∏–∑–∞—Ü–∏–∏ —Ä–∏—Å–∫–æ–≤ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö?", "next_state": OrderState.waiting_for_tasksOnMigrationsAndUpd},
    'updatePlugin': {"question": "6Ô∏è‚É£ –ö–∞–∫–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏–ª–∏ –ø–æ–¥—Ö–æ–¥—ã –í—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞ –∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º —Å –ø–ª–∞–≥–∏–Ω–∞–º–∏?", "next_state": OrderState.waiting_for_monitoringProblems},
    'monitoringProblems': {"question": "7Ô∏è‚É£ –ö–∞–∫ –í—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å –ø–ª–∞–≥–∏–Ω–æ–≤ –∏ —Å–µ—Ä–≤–µ—Ä–∞ –≤ —Ü–µ–ª–æ–º?\n–ö–∞–∫ —á–∞—Å—Ç–æ –í—ã –æ–±–Ω–æ–≤–ª—è–µ—Ç–µ –ø–ª–∞–≥–∏–Ω—ã –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç–µ –∏—Ö –Ω–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å –Ω–æ–≤—ã–º–∏ –≤–µ—Ä—Å–∏—è–º–∏ Minecraft?", "next_state": OrderState.waiting_for_actualizationOfPlugin},
    'actualizationPlugin': {"question": "8Ô∏è‚É£ –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ –í–∞—à–∏—Ö —Ä–∞–±–æ—Ç (—Å—Å—ã–ª–∫–∞ Github, behance, imgur –∏ –¥—Ä)", "next_state": OrderState.waiting_for_portfolioPlugin},
    'portfolioPlugin': {"question": None, "next_state": None}
}

@router.message(Command("cancel"))
async def cancel_order_command(message: types.Message, state: FSMContext):
    await state.clear()
    await message.answer("üö´ –ó–∞–∫–∞–∑ –æ—Ç–º–µ–Ω—ë–Ω. –í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", reply_markup=main_menu)

async def process_plugin_specialist_step(message: types.Message, state: FSMContext, field: str):
    await state.update_data({field: message.text})
    step_info = plugin_specialist_questions[field]

    if step_info["next_state"]:
        await message.answer(step_info["question"], reply_markup=ReplyKeyboardRemove())
        await state.set_state(step_info["next_state"])
    else:
        await complete_sborshik_form(message, state)

@router.message(OrderState.waiting_for_fio)
async def process_name(message: types.Message, state: FSMContext):
    await process_plugin_specialist_step(message, state, 'name')

@router.message(OrderState.waiting_for_birthdate)
async def process_birth(message: types.Message, state: FSMContext):
    await process_plugin_specialist_step(message, state, 'birthdate')

@router.message(OrderState.waiting_for_experience)
async def process_year(message: types.Message, state: FSMContext):
    await process_plugin_specialist_step(message, state, 'experience')

@router.message(OrderState.waiting_for_experienceInServers)
async def process_q1(message: types.Message, state: FSMContext):
    await process_plugin_specialist_step(message, state, 'experienceInServer')

@router.message(OrderState.waiting_for_choosePlugin)
async def process_q2(message: types.Message, state: FSMContext):
    await process_plugin_specialist_step(message, state, 'choosePlugins')

@router.message(OrderState.waiting_for_problemsInPlugins)
async def process_q3(message: types.Message, state: FSMContext):
    await process_plugin_specialist_step(message, state, 'problemsInPlugins')

@router.message(OrderState.waiting_for_optimizationPluginsOnServer)
async def process_q4(message: types.Message, state: FSMContext):
    await process_plugin_specialist_step(message, state, 'optimizationPlugin')

@router.message(OrderState.waiting_for_tasksOnMigrationsAndUpd)
async def process_q5(message: types.Message, state: FSMContext):
    await process_plugin_specialist_step(message, state, 'updatePlugin')

@router.message(OrderState.waiting_for_monitoringProblems)
async def process_q6(message: types.Message, state: FSMContext):
    await process_plugin_specialist_step(message, state, 'monitoringProblems')

@router.message(OrderState.waiting_for_actualizationOfPlugin)
async def process_q7(message: types.Message, state: FSMContext):
    await process_plugin_specialist_step(message, state, 'actualizationPlugin')

@router.message(OrderState.waiting_for_portfolioPlugin)
async def process_q8(message: types.Message, state: FSMContext):
    await process_plugin_specialist_step(message, state, 'portfolioPlugin')

async def complete_sborshik_form(message: types.Message, state: FSMContext):
    user_data = await state.get_data()
    await bot.send_message(
        GROUP_ID,
        f"üì¢ –ù–æ–≤—ã–π –∫–∞–Ω–¥–∏–¥–∞—Ç –≤ –∫–æ–º–∞–Ω–¥—É —Å–±–æ—Ä—â–∏–∫–æ–≤!\n\n"
        f"üîπ –§–ò–û:\n ‚Äî {user_data['name']}\n"
        f"üîπ –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è:\n ‚Äî {user_data['birthdate']}\n"
        f"üîπ –û–ø—ã—Ç –≤ –≥–æ–¥–∞—Ö:\n ‚Äî {user_data['experience']}\n"
        f"üîπ –ö–æ—Ä–æ—Ç–∫–æ –æ –æ–ø—ã—Ç–µ –≤ —Å–µ—Ä–≤–µ—Ä–∞—Ö:\n ‚Äî {user_data['experienceInServer']}\n"
        f"üîπ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–ª–∞–≥–∏–Ω–æ–≤ –∏ –ø–æ–¥–±–æ—Ä:\n ‚Äî {user_data['choosePlugins']}\n"
        f"üîπ –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –ø–ª–∞–≥–∏–Ω–æ–≤ –∏ –∏—Ö –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã:\n ‚Äî {user_data['problemsInPlugins']}\n"
        f"üîπ –õ–∞–≥–∏ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è:\n ‚Äî {user_data['optimizationPlugin']}\n"
        f"üîπ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–ª–∞–≥–∏–Ω–æ–≤:\n ‚Äî {user_data['updatePlugin']}\n"
        f"üîπ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º:\n ‚Äî {user_data['monitoringProblems']}\n"
        f"üîπ –ê–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å –ø–ª–∞–≥–∏–Ω–æ–≤:\n ‚Äî {user_data['actualizationPlugin']}\n"
        f"üîπ –ü—Ä–∏–º–µ—Ä—ã —Ä–∞–±–æ—Ç:\n ‚Äî {user_data['portfolioPlugin']}\n\n"
        f"–ö–∞–Ω–¥–∏–¥–∞—Ç: {message.from_user.full_name} (@{message.from_user.username or '–ë–µ–∑ —é–∑–µ—Ä–Ω–µ–π–º–∞'})"
    )
    await message.answer("‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –∫–æ–º–∞–Ω–¥—É –Ω–∞ –¥–æ–ª–∂–Ω–æ—Å—Ç—å –°–±–æ—Ä—â–∏–∫ MineCraft –ø—Ä–∏–Ω—è—Ç–∞. –û–∂–∏–¥–∞–π—Ç–µ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏!", reply_markup=main_menu)
    await state.clear()
