from aiogram import types, Router
from aiogram.types import ReplyKeyboardRemove
from aiogram.fsm.context import FSMContext
from aiogram.filters import Command
from bot.keyboards import main_menu
from bot.states import OrderState
from bot.loader import bot
from bot.config import GROUP_ID

router = Router()

questions = [
    ("fio", "üìã –í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–µ –§–ò–û", OrderState.waiting_for_fio),
    ("name", "–í–∞—à–∞ –¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è (–¥–¥.–º–º.–≥–≥–≥–≥)?", OrderState.waiting_for_birthdate),
    ("birthdate", "–í–∞—à –æ–ø—ã—Ç –≤ –≥–æ–¥–∞—Ö", OrderState.waiting_for_experience),
    ("experience", "1Ô∏è‚É£ –ö–∞–∫–æ–π —É –í–∞—Å –æ–ø—ã—Ç –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞–º–∏ Minecraft?\n–ö–∞–∫–∏–µ —Ç–∏–ø—ã —Å–µ—Ä–≤–µ—Ä–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, Bukkit, Spigot, Paper) –í—ã –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–ª–∏?", OrderState.waiting_for_experienceInServers),
    ("experienceInServer", "2Ô∏è‚É£ –ö–∞–∫ –í—ã –ø–æ–¥—Ö–æ–¥–∏—Ç–µ –∫ –≤—ã–±–æ—Ä—É –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –ø–ª–∞–≥–∏–Ω–æ–≤?", OrderState.waiting_for_choosePlugin),
    ("choosePlugins", "3Ô∏è‚É£ –ö–∞–∫ –í—ã —Ä–µ—à–∞–µ—Ç–µ –ø—Ä–æ–±–ª–µ–º—ã —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ –º–µ–∂–¥—É –ø–ª–∞–≥–∏–Ω–∞–º–∏?", OrderState.waiting_for_problemsInPlugins),
    ("problemsInPlugins", "4Ô∏è‚É£ –ö–∞–∫–∏–µ –º–µ—Ä—ã –í—ã –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–µ—Ä–∞?", OrderState.waiting_for_optimizationPluginsOnServer),
    ("optimizationPlugin", "5Ô∏è‚É£ –ö–∞–∫ –í—ã —Ä–µ—à–∞–µ—Ç–µ –∑–∞–¥–∞—á–∏ –ø–æ –º–∏–≥—Ä–∞—Ü–∏–∏ —Å–µ—Ä–≤–µ—Ä–æ–≤ –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—é –ø–ª–∞–≥–∏–Ω–æ–≤?", OrderState.waiting_for_tasksOnMigrationsAndUpd),
    ("updatePlugin", "6Ô∏è‚É£ –ö–∞–∫–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –í—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º —Å –ø–ª–∞–≥–∏–Ω–∞–º–∏?", OrderState.waiting_for_monitoringProblems),
    ("monitoringProblems", "7Ô∏è‚É£ –ö–∞–∫ –í—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å –ø–ª–∞–≥–∏–Ω–æ–≤?", OrderState.waiting_for_actualizationOfPlugin),
    ("actualizationPlugin", "8Ô∏è‚É£ –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ (—Å—Å—ã–ª–∫–∏ GitHub, Behance –∏ —Ç.–¥.)", OrderState.waiting_for_portfolioPlugin),
    ("portfolioPlugin", None, None)
]

field_to_state = {field: state for field, _, state in questions if state is not None}
state_to_field = {state: field for field, _, state in questions if state is not None}

@router.message(Command("cancel"))
async def cancel_order_command(message: types.Message, state: FSMContext):
    await state.clear()
    await message.answer("üö´ –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ. –í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", reply_markup=main_menu)

@router.message()
async def handle_plugin_question(message: types.Message, state: FSMContext):
    current_state = await state.get_state()
    field = state_to_field.get(current_state)

    if not field:
        return

    await state.update_data({field: message.text})

    current_index = next((i for i, (f, _, _) in enumerate(questions) if f == field), None)
    if current_index is not None and current_index + 1 < len(questions):
        next_field, question, next_state = questions[current_index + 1]
        if question:
            await message.answer(question, reply_markup=ReplyKeyboardRemove())
        if next_state:
            await state.set_state(next_state)
        else:
            await complete_form(message, state)

async def complete_form(message: types.Message, state: FSMContext):
    user_data = await state.get_data()

    text = (
        f"üì¢ –ù–æ–≤—ã–π –∫–∞–Ω–¥–∏–¥–∞—Ç –≤ –∫–æ–º–∞–Ω–¥—É —Å–±–æ—Ä—â–∏–∫–æ–≤!\n\n"
        f"üîπ –§–ò–û:\n ‚Äî {user_data.get('fio')}\n"
        f"üîπ –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è:\n ‚Äî {user_data.get('name')}\n"
        f"üîπ –û–ø—ã—Ç –≤ –≥–æ–¥–∞—Ö:\n ‚Äî {user_data.get('birthdate')}\n"
        f"üîπ –ö–æ—Ä–æ—Ç–∫–æ –æ –æ–ø—ã—Ç–µ –≤ —Å–µ—Ä–≤–µ—Ä–∞—Ö:\n ‚Äî {user_data.get('experience')}\n"
        f"üîπ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–ª–∞–≥–∏–Ω–æ–≤:\n ‚Äî {user_data.get('experienceInServer')}\n"
        f"üîπ –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –ø–ª–∞–≥–∏–Ω–æ–≤:\n ‚Äî {user_data.get('choosePlugins')}\n"
        f"üîπ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è:\n ‚Äî {user_data.get('problemsInPlugins')}\n"
        f"üîπ –û–±–Ω–æ–≤–ª–µ–Ω–∏—è:\n ‚Äî {user_data.get('optimizationPlugin')}\n"
        f"üîπ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞:\n ‚Äî {user_data.get('updatePlugin')}\n"
        f"üîπ –ê–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å:\n ‚Äî {user_data.get('monitoringProblems')}\n"
        f"üîπ –ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ:\n ‚Äî {user_data.get('actualizationPlugin')}\n\n"
        f"–ö–∞–Ω–¥–∏–¥–∞—Ç: {message.from_user.full_name} (@{message.from_user.username or '–ë–µ–∑ —é–∑–µ—Ä–Ω–µ–π–º–∞'})"
    )

    await bot.send_message(GROUP_ID, text)
    await message.answer("‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞. –û–∂–∏–¥–∞–π—Ç–µ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏!", reply_markup=main_menu)
    await state.clear()
