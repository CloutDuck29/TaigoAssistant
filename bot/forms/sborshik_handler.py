from aiogram import types, Router
from aiogram.types import ReplyKeyboardRemove
from aiogram.fsm.context import FSMContext
from bot.keyboards import minecraft_menu, yes_no_menu, main_menu, how_do_you_know_us, deadline
from bot.states import OrderState
from bot.loader import bot
from bot.config import GROUP_ID
from aiogram.filters import Command

router = Router()

order_build_steps = {
    'name': {"question": "–í–∞—à–∞ –¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è (–¥–¥.–º–º.–≥–≥–≥–≥)?", "next_state": OrderState.waiting_for_birthdate},
    'birthdate': {"question": "–í–∞—à –æ–ø—ã—Ç –≤ –≥–æ–¥–∞—Ö", "next_state": OrderState.waiting_for_experience},
    'experience': {"question": "1Ô∏è‚É£ –ö–∞–∫–æ–π —É –í–∞—Å –æ–ø—ã—Ç –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞–º–∏ Minecraft?\n–ö–∞–∫–∏–µ —Ç–∏–ø—ã —Å–µ—Ä–≤–µ—Ä–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, Bukkit, Spigot, Paper) –í—ã –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–ª–∏?", "next_state": OrderState.waiting_for_experienceInServers},
    'experienceInServer': {"question": "2Ô∏è‚É£ –ö–∞–∫ –í—ã –ø–æ–¥—Ö–æ–¥–∏—Ç–µ –∫ –≤—ã–±–æ—Ä—É –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –ø–ª–∞–≥–∏–Ω–æ–≤?", "next_state": OrderState.waiting_for_choosePlugin},
    'choosePlugins': {"question": "3Ô∏è‚É£ –ö–∞–∫ –í—ã —Ä–µ—à–∞–µ—Ç–µ –ø—Ä–æ–±–ª–µ–º—ã —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ –º–µ–∂–¥—É –ø–ª–∞–≥–∏–Ω–∞–º–∏?", "next_state": OrderState.waiting_for_problemsInPlugins},
    'problemsInPlugins': {"question": "4Ô∏è‚É£ –ö–∞–∫–∏–µ –º–µ—Ä—ã –í—ã –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–µ—Ä–∞?", "next_state": OrderState.waiting_for_optimizationPluginsOnServer},
    'optimizationPlugin': {"question": "5Ô∏è‚É£ –ö–∞–∫ –í—ã —Ä–µ—à–∞–µ—Ç–µ –∑–∞–¥–∞—á–∏ –ø–æ –º–∏–≥—Ä–∞—Ü–∏–∏ —Å–µ—Ä–≤–µ—Ä–æ–≤ –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—é –ø–ª–∞–≥–∏–Ω–æ–≤?", "next_state": OrderState.waiting_for_tasksOnMigrationsAndUpd},
    'updatePlugin': {"question": "6Ô∏è‚É£ –ö–∞–∫–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –í—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º —Å –ø–ª–∞–≥–∏–Ω–∞–º–∏?", "next_state": OrderState.waiting_for_monitoringProblems},
    'monitoringProblems': {"question": "7Ô∏è‚É£ –ö–∞–∫ –í—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å –ø–ª–∞–≥–∏–Ω–æ–≤?", "next_state": OrderState.waiting_for_actualizationOfPlugin},
    'actualizationPlugin': {"question": "8Ô∏è‚É£ –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ (—Å—Å—ã–ª–∫–∏ GitHub, Behance –∏ —Ç.–¥.)", "next_state": OrderState.waiting_for_portfolioPlugin},
    'portfolioPlugin': {"question": None, "next_state": None}
}

async def process_order_build_step(message: types.Message, state: FSMContext, field: str):
    if message.text.lower() == "/cancel":
        await state.clear()
        await message.answer("üö´ –ó–∞–∫–∞–∑ –æ—Ç–º–µ–Ω—ë–Ω. –í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", reply_markup=main_menu)
        return

    await state.update_data({field: message.text})

    step_info = order_build_steps[field]
    if step_info["question"]:
        text = step_info["question"]

        if field == "name":
            text += "\n\n‚ùó –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑ ‚Äî –≤–≤–µ–¥–∏—Ç–µ /cancel"

        await message.answer(text, reply_markup=step_info.get("keyboard", ReplyKeyboardRemove()))

    if step_info["next_state"]:
        await state.set_state(step_info["next_state"])
    else:
        await complete_build_order(message, state)

async def complete_build_order(message: types.Message, state: FSMContext):
    user_data = await state.get_data()
    await bot.send_message(
        GROUP_ID,
        f"üì¢ –ù–æ–≤—ã–π –∫–∞–Ω–¥–∏–¥–∞—Ç –Ω–∞ —Å–±–æ—Ä—â–∏–∫–∞!\n\n"
        f"üîπ –§–ò–û:\n ‚Äî {user_data['name']}\n"
        f"üîπ –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è:\n ‚Äî {user_data['birthdate']}\n"
        f"üîπ –û–ø—ã—Ç –≤ –≥–æ–¥–∞—Ö:\n ‚Äî {user_data['experience']}\n"
        f"üîπ –û–ø—ã—Ç –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞–º–∏ Minecraft:\n ‚Äî {user_data['experienceInServer']}\n"
        f"üîπ –ü–æ–¥—Ö–æ–¥ –∫ –≤—ã–±–æ—Ä—É –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –ø–ª–∞–≥–∏–Ω–æ–≤:\n ‚Äî {user_data['choosePlugins']}\n"
        f"üîπ –†–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ –º–µ–∂–¥—É –ø–ª–∞–≥–∏–Ω–∞–º–∏:\n ‚Äî {user_data['problemsInPlugins']}\n"
        f"üîπ –ú–µ—Ä—ã –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–µ—Ä–∞:\n ‚Äî {user_data['optimizationPlugin']}\n"
        f"üîπ –ó–∞–¥–∞—á–∏ –ø–æ –º–∏–≥—Ä–∞—Ü–∏–∏ —Å–µ—Ä–≤–µ—Ä–æ–≤ –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—é –ø–ª–∞–≥–∏–Ω–æ–≤:\n ‚Äî {user_data['updatePlugin']}\n"
        f"üîπ –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º —Å –ø–ª–∞–≥–∏–Ω–∞–º–∏:\n ‚Äî {user_data['monitoringProblems']}\n"
        f"üîπ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç–∏ –ø–ª–∞–≥–∏–Ω–æ–≤:\n ‚Äî {user_data['actualizationPlugin']}\n"
        f"üîπ –ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ (—Å—Å—ã–ª–∫–∏ GitHub, Behance –∏ —Ç.–¥.):\n ‚Äî {user_data['portfolioPlugin']}\n\n"
        f"–ó–∞–∫–∞–∑—á–∏–∫: {message.from_user.full_name} (@{message.from_user.username or '–ë–µ–∑ —é–∑–µ—Ä–Ω–µ–π–º–∞'})"
    )
    await message.answer("‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏. –û–∂–∏–¥–∞–π—Ç–µ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏!", reply_markup=main_menu)
    await state.clear()

@router.message(Command("cancel"))
async def cancel_order_command(message: types.Message, state: FSMContext):
    await state.clear()
    await message.answer("üö´ –ó–∞–∫–∞–∑ –æ—Ç–º–µ–Ω—ë–Ω. –í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", reply_markup=main_menu)

@router.message(OrderState.waiting_for_fio)
async def process_fio(message: types.Message, state: FSMContext):
    await process_order_build_step(message, state, 'name')


@router.message(OrderState.waiting_for_birthdate)
async def process_birthdate(message: types.Message, state: FSMContext):
    await process_order_build_step(message, state, 'birthdate')


@router.message(OrderState.waiting_for_experience)
async def process_experience(message: types.Message, state: FSMContext):
    await process_order_build_step(message, state, 'experience')


@router.message(OrderState.waiting_for_experienceInServers)
async def process_experienceInServers(message: types.Message, state: FSMContext):
    await process_order_build_step(message, state, 'experienceInServer')


@router.message(OrderState.waiting_for_choosePlugin)
async def process_choosePlugin(message: types.Message, state: FSMContext):
    await process_order_build_step(message, state, 'choosePlugins')


@router.message(OrderState.waiting_for_problemsInPlugins)
async def process_problemsInPlugins(message: types.Message, state: FSMContext):
    await process_order_build_step(message, state, 'problemsInPlugins')


@router.message(OrderState.waiting_for_optimizationPluginsOnServer)
async def process_optimizationPluginsOnServer(message: types.Message, state: FSMContext):
    await process_order_build_step(message, state, 'optimizationPlugin')


@router.message(OrderState.waiting_for_tasksOnMigrationsAndUpd)
async def process_tasksOnMigrationsAndUpd(message: types.Message, state: FSMContext):
    await process_order_build_step(message, state, 'updatePlugin')


@router.message(OrderState.waiting_for_monitoringProblems)
async def process_monitoringProblems(message: types.Message, state: FSMContext):
    await process_order_build_step(message, state, 'monitoringProblems')


@router.message(OrderState.waiting_for_actualizationOfPlugin)
async def process_actualizationOfPlugin(message: types.Message, state: FSMContext):
    await process_order_build_step(message, state, 'actualizationPlugin')


@router.message(OrderState.waiting_for_portfolioPlugin)
async def process_portfolioPlugin(message: types.Message, state: FSMContext):
    await process_order_build_step(message, state, 'portfolioPlugin')

